//n x n x n
@for $section from 1 through $N {
  div[class*=" section-#{$section}"] {
    width: 100%;
    height: 100%;
    position: absolute;
    @include transform-style();
    @include transition(transform 1s);
    @include rotations();

    .cubie {
      @for $row from 1 through $N {
        &[class*=" row-#{$row}"] {
          //cols
          @for $col from 1 through $N {
            &[class*=" col-#{$col}"] {
              @include transform(
                  translateX(nth($cubie_positions, $col))
                  translateY(nth($cubie_positions, $section))
                  translateZ(nth($cubie_positions, $row)));
            }
          }
        }
      }
    }
  }
}

.cubie {
  width: $cubie_dimension;
  height: $cubie_dimension;
  position: absolute;
  @include transform-style();
  //the sides of a cubie
  .figure {
    width: $cubie_dimension;
    height: $cubie_dimension;
    display: block;
    position: absolute;
    border: 1px solid black;
    line-height: $cubie_dimension;
    font-size: $cubie_dimension * 2/3;
    font-weight: bold;
    color: white;
    text-align: center;
    opacity: 0.80;

    /* background-color */
    &.orange { background-color: $orange; }
    &.green { background-color: $green; }
    &.red { background-color: $red; }
    &.yellow { background-color: $yellow; }
    &.white { background-color: $white; color: #000; }
    &.blue { background-color: $blue; }

    /* placement */
    &.front  { @include front(); }
    &.left   { @include left(); }
    &.back   { @include back(); }
    &.right  { @include right(); }
    &.top    { @include top(); }
    &.bottom { @include bottom(); }
  }
}
